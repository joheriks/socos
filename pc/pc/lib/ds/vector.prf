(vector (vector_TCC1 0
         (vector_TCC1-1 nil 3466496377
          ("" (existence-tcc)
           ((""
             (inst 1
              "(# len:=0, elem:=lambda (x:below[0]): epsilon(lambda (t:T):true) #)")
             (("" (grind) nil nil)) nil))
           nil)
          ((nat nonempty-type-eq-decl nil naturalnumbers nil)
           (below type-eq-decl nil naturalnumbers nil)
           (T formal-type-decl nil vector nil)
           (number nonempty-type-decl nil numbers nil)
           (boolean nonempty-type-decl nil booleans nil)
           (number_field_pred const-decl "[number -> boolean]"
            number_fields nil)
           (number_field nonempty-type-from-decl nil number_fields nil)
           (real_pred const-decl "[number_field -> boolean]" reals nil)
           (real nonempty-type-from-decl nil reals nil)
           (rational_pred const-decl "[real -> boolean]" rationals nil)
           (rational nonempty-type-from-decl nil rationals nil)
           (integer_pred const-decl "[rational -> boolean]" integers
                         nil)
           (int nonempty-type-eq-decl nil integers nil)
           (bool nonempty-type-eq-decl nil booleans nil)
           (>= const-decl "bool" reals nil)
           (FALSE const-decl "bool" booleans nil)
           (below type-eq-decl nil nat_types nil)
           (pred type-eq-decl nil defined_types nil)
           (epsilon const-decl "T" epsilons nil)
           (TRUE const-decl "bool" booleans nil))
          shostak))
        (update_prop_1_TCC1 0
         (update_prop_1_TCC1-1 nil 3466496377 ("" (tcc))
          ((update const-decl "{w: vector | len(w) = len(v)}" vector
            nil))
          nil))
        (update_prop_1 0
         (update_prop_1-1 nil 3468262134 ("" (grind-with-ext) nil nil)
          ((update const-decl "{w: vector | len(w) = len(v)}" vector
            nil)
           (access const-decl "T" vector nil))
          shostak))
        (update_prop_2_TCC1 0
         (update_prop_2_TCC1-1 nil 3466496377 ("" (tcc))
          ((update const-decl "{w: vector | len(w) = len(v)}" vector
            nil))
          nil))
        (update_prop_2 0
         (update_prop_2-1 nil 3468262141 ("" (grind-with-ext) nil nil)
          ((boolean nonempty-type-decl nil booleans nil)
           (bool nonempty-type-eq-decl nil booleans nil)
           (NOT const-decl "[bool -> bool]" booleans nil)
           (number nonempty-type-decl nil numbers nil)
           (number_field_pred const-decl "[number -> boolean]"
            number_fields nil)
           (number_field nonempty-type-from-decl nil number_fields nil)
           (real_pred const-decl "[number_field -> boolean]" reals nil)
           (real nonempty-type-from-decl nil reals nil)
           (< const-decl "bool" reals nil)
           (rational_pred const-decl "[real -> boolean]" rationals nil)
           (rational nonempty-type-from-decl nil rationals nil)
           (integer_pred const-decl "[rational -> boolean]" integers
                         nil)
           (int nonempty-type-eq-decl nil integers nil)
           (>= const-decl "bool" reals nil)
           (nat nonempty-type-eq-decl nil naturalnumbers nil)
           (below type-eq-decl nil naturalnumbers nil)
           (T formal-type-decl nil vector nil)
           (vector nonempty-type-eq-decl nil vector nil)
           (index type-eq-decl nil vector nil)
           (real_lt_is_strict_total_order name-judgement
            "(strict_total_order?[real])" real_props nil)
           (update const-decl "{w: vector | len(w) = len(v)}" vector
            nil)
           (access const-decl "T" vector nil))
          shostak))
        (val_access_prop_1 0
         (val_access_prop_1-1 nil 3550908816 ("" (grind) nil nil) nil
          shostak))
        (val_access_prop_2_TCC1 0
         (val_access_prop_2_TCC1-1 nil 3550908814
          ("" (subtype-tcc) nil nil)
          ((boolean nonempty-type-decl nil booleans nil)
           (bool nonempty-type-eq-decl nil booleans nil)
           (NOT const-decl "[bool -> bool]" booleans nil)
           (number nonempty-type-decl nil numbers nil)
           (number_field_pred const-decl "[number -> boolean]"
            number_fields nil)
           (number_field nonempty-type-from-decl nil number_fields nil)
           (real_pred const-decl "[number_field -> boolean]" reals nil)
           (real nonempty-type-from-decl nil reals nil)
           (< const-decl "bool" reals nil)
           (rational_pred const-decl "[real -> boolean]" rationals nil)
           (rational nonempty-type-from-decl nil rationals nil)
           (integer_pred const-decl "[rational -> boolean]" integers
                         nil)
           (int nonempty-type-eq-decl nil integers nil)
           (>= const-decl "bool" reals nil)
           (nat nonempty-type-eq-decl nil naturalnumbers nil)
           (below type-eq-decl nil naturalnumbers nil)
           (T formal-type-decl nil vector nil)
           (vector nonempty-type-eq-decl nil vector nil)
           (index type-eq-decl nil vector nil)
           (real_lt_is_strict_total_order name-judgement
            "(strict_total_order?[real])" real_props nil))
          nil))
        (val_access_prop_2 0
         (val_access_prop_2-1 nil 3550909161
          ("" (skosimp*)
           (("" (expand access)
             (("" (expand vector_val) (("" (grind) nil nil)) nil))
             nil))
           nil)
          ((access const-decl "T" vector nil)
           (vector_val const-decl "{w: vector | len(w) = length(a)}"
            vector nil))
          shostak)))

