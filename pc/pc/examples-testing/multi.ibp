multi: module begin

    using icip@core;

    % search for the first occurrence of x in array a and return its index
    search[ a:dynarray[int].dynarray, x:int, valres i:nat ]: procedure
    begin
        found: post i<len(a) and a(i)=x and forall (j:below(i)):a(j)/=x;
        not_found: post forall (j:index(a)): a(j)/=x;

        k:=0; goto loop

        loop: situation
        begin
            k: progvar nat;
            invariant k<=len(a);
            invariant forall (j:below(k)): a(k)/=x;

            select
                k<len(a) then 
                    select 
                        a(k)=x then i:=k; exit at found
                        a(k)/=x then k:=k+1; goto loop decreasing [len(a)-k]
                    end
                k=len(a) then exit at not_found
            end
                    
        end loop

    end search


    % replace all occurrences of value x with value y in a
    replace[ valres a:dynarray[int].dynarray, x:int, y:int]: procedure
    begin
        pre x/=y;
        post a = mupdate(OLD(a),occurrences(OLD(a),x),lambda (i:index(a)):y);

        i: progvar nat;

        goto loop

        loop: situation
        begin
            invariant exists (p:setof[occurrences(OLD(a),x)]): a=mupdate(OLD(a),p,lambda (i:index):y) ;

            call search(a,0,i)
                found then
                    a := update(a,i,x); 
                    goto loop decreasing [card(occurrences(a,x))]
                not_found then 
                    exit
            end
            
        end loop
        
    end replace

end multi
